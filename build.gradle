group 'com.turtleboxgames.overworld'
version '0.1.0-SNAPSHOT'

buildscript {
    ext.kotlin_version   = '1.1.3'
    ext.detekt_version   = '1.0.0.M12.1'
    ext.dokka_version    = '0.9.15'
    ext.junit_version    = '1.0.0-M4'
    ext.spek_version     = '1.1.2'
    ext.hamkrest_version = '1.4.1.0'

    repositories {
        jcenter()
        maven { url "http://dl.bintray.com/kotlin/exposed" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$junit_version"
    }
}

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'jacoco'
    apply plugin: 'io.gitlab.arturbosch.detekt'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'org.junit.platform.gradle.plugin'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        jcenter()
        maven { url "http://dl.bintray.com/kotlin/exposed" }
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
        testCompile "org.jetbrains.spek:spek-api:$spek_version"
        testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
        testRuntime "org.junit.platform:junit-platform-launcher:$junit_version"
        testCompile "com.natpryce:hamkrest:$hamkrest_version"
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    dokka {
        outputFormat    = 'html'
        outputDirectory = "$buildDir/javadoc"
    }

    junitPlatform {
        filters {
            engines {
                include 'spek'
            }
        }
        enableStandardTestTask true
    }
}

subprojects {
    test.useTestNG()
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        xml.enabled true
        xml.destination "$buildDir/reports/jacoco/report.xml"
        html.enabled false
        csv.enabled false
    }
}

codeCoverageReport.dependsOn {
    subprojects*.test
}